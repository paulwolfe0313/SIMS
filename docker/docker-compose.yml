version: '3.8'

services:
  mysql-sims:
    image: mysql:8.0
    container_name: mysql-sims
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: inventory
      MYSQL_USER: sims_user
      MYSQL_PASSWORD: sims_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
    networks:
      - sims-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      mysql-sims:
        condition: service_healthy
      mailhog:
        condition: service_started
    ports:
      - "9093:9093"
    networks:
      - sims-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-sims:3306/inventory
      SPRING_DATASOURCE_USERNAME: sims_user
      SPRING_DATASOURCE_PASSWORD: sims_password
      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: 1025
      SPRING_MAIL_USERNAME: test@sims.com
      SPRING_MAIL_PASSWORD: password
      JWT_SECRET: your-256-bit-secret-key-here-make-it-long-and-secure
      APP_BASE_URL: http://localhost:9093
    restart: always

  product-service:
    build:
      context: ../product-service
      dockerfile: Dockerfile
    container_name: product-service
    depends_on:
      mysql-sims:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "9090:9090"  
    networks:
      - sims-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-sims:3306/inventory
      SPRING_DATASOURCE_USERNAME: sims_user
      SPRING_DATASOURCE_PASSWORD: sims_password
      JWT_SECRET: your-256-bit-secret-key-here-make-it-long-and-secure
    restart: always

  order-service:
    build:
      context: ../order-service
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      mysql-sims:
        condition: service_healthy
      kafka:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "9091:9091"
    networks:
      - sims-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-sims:3306/inventory
      SPRING_DATASOURCE_USERNAME: sims_user
      SPRING_DATASOURCE_PASSWORD: sims_password
      KAFKA_BROKER: kafka:9092
      JWT_SECRET: your-256-bit-secret-key-here-make-it-long-and-secure
    restart: always

  notification-service:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    depends_on:
      kafka:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "9095:9095"
    networks:
      - sims-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-sims:3306/inventory?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: sims_user
      SPRING_DATASOURCE_PASSWORD: sims_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: your-256-bit-secret-key-here-make-it-long-and-secure
    restart: always

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP Server
      - "8025:8025" # Web UI
    networks:
      - sims-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - sims-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - sims-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:

networks:
  sims-network:
